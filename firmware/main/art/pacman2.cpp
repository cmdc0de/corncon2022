#include "gimp_type.h"
/* GIMP RGBA C-Source image dump (pacman2.c) */

static const struct {
  guint  	 width;
  guint  	 height;
  guint  	 bytes_per_pixel; /* 2:RGB16, 3:RGB, 4:RGBA */ 
  guint8 	 pixel_data[10 * 9 * 2 + 1];
} gimp_image = {
  10, 9, 2,
  "\000\000\000\000\000\000F\335\207\345\207\345\307\355\000\000\000\000\000\000\000\000#\203(\376\347\365"
  "\347\365\347\365\347\365\007\376\305\304`\020\000\000(\376\347\365\347\365\347\365"
  "\347\365\007\366\307\355E\264\201AF\335\347\365\347\365\347\365\347\365'\376"
  "\343r\301I\000\000\000\000\207\345\347\365\347\365\347\365\207\345\000)\000\000\000\000\000\000"
  "\000\000\304\233\347\365\347\365\347\365\347\365'\376\245\274%\254\000\000\000\000\000"
  "\000'\376\347\365\347\365\347\365\347\365\347\365\347\355\307\355\"Z\040\010"
  "@\061\207\345\347\365\347\365\347\365\347\365f\345\304\233\000\000\000\000\000\000\000\000"
  "\344\233%\254%\254E\254\000\000\000\000\000\000",
};

uint32_t getWidthpacman2() {return gimp_image.width;}
uint32_t getHeightpacman2() {return gimp_image.height;}
uint32_t getBytePerPixelpacman2() {return gimp_image.bytes_per_pixel;}
const uint8_t *getPixelDatapacman2() {return &gimp_image.pixel_data[0];}
