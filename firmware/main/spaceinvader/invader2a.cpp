/* GIMP RGBA C-Source image dump (invader2a.c) */

#include <stdint.h>
static const struct {
  unsigned int 	 width;
  unsigned int 	 height;
  unsigned int 	 bytes_per_pixel; /* 2:RGB16, 3:RGB, 4:RGBA */ 
  unsigned char	 pixel_data[14 * 13 * 2 + 1];
} gimp_image = {
  14, 13, 2,
  "\000\000\000\000\000\000\000\000\040\000\377\377\377\377\377\377\377\377A\010\000\000\000\000\000\000\000\000"
  "\000\000a\010\000\000A\010<\347\377\377\377\377\377\377\377\377}\357\202\020\202\020"
  "\242\020\000\000\000\000\034\347\377\377\377\377\377\377\377\377\377\377\377\377\377"
  "\377\377\377\377\377\377\377<\347A\010}\357\337\377\377\377\377\377\377\377"
  "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\337\377"
  "\377\377\377\377\377\377\276\367}\357}\357\377\377\377\377}\357}\357\276"
  "\367\377\377\377\377\377\377\377\377\377\377\377\377\276\367\000\000\000\000\236"
  "\367\377\377A\010\000\000<\347\377\377\377\377\377\377\377\377\377\377\377\377"
  "\236\367a\010\040\000\276\367\377\377E)\040\000\373\336\377\377\377\377\377\377"
  "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
  "\377\377\377\377\377\377\377\377\377\377\242\020\202\020a\010\242\020\377\377"
  "\377\377\242\020\242\020\337\377\377\377\040\000\040\000\202\020\242\020\000\000\000\000\303"
  "\030\303\030\337\377\377\377\206\061\206\061\337\377\377\377a\010\040\000\000\000\000\000"
  "\000\000\303\030\377\377\377\377\377\377\343\030\377\377\377\377\343\030\236\367"
  "\377\377\337\377\202\020\000\000\242\020\377\377\337\377\040\000\040\000A\010A\010\040\000"
  "\000\000\242\020\040\000\337\377\276\367\242\020\377\377\377\377A\010\000\000\000\000\000\000\000"
  "\000\000\000\000\000\000\000\000\000\202\020\377\377\377\377",
};

uint32_t getWidthinvader2a() {return gimp_image.width;}
uint32_t getHeightinvader2a() {return gimp_image.height;}
uint32_t getBytePerPixelinvader2a() {return gimp_image.bytes_per_pixel;}
const uint8_t *getPixelDatainvader2a() {return &gimp_image.pixel_data[0];}
